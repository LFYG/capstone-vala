[CCode (cprefix="CS_")]
namespace Capstone {
	[CCode (cname="cs_arm64", cheader_filename="arm64.h")]
	public struct ARM64 {
		ArmCC cc;
		bool update_flags;
		bool writeback;
		uint8 op_count;
		ArmOp operands[8];
	}

	[CCode (cname="arm64_extender", cprefix="ARM64_EXT_", cheader_filename="arm64.h")]
	public enum Arm64Extender {
		/*
		   Place cursor in the next line and type: yy@"
		   :r! node cs-dump-enums.js arm64 arm64_extender
		 */
		INVALID = 0,
		UXTB = 1,
		UXTH = 2,
		UXTW = 3,
		UXTX = 4,
		SXTB = 5,
		SXTH = 6,
		SXTW = 7,
		SXTX = 8
	}

	[CCode (cname="arm64_shifter", cprefix="ARM64_SFT_", cheader_filename="arm64.h")]
	public enum Arm64Shifter {
		/*
		   Place cursor in the next line and type: yy@"
		   :r! node cs-dump-enums.js arm arm_shifter
		 */
		INVALID = 0,
		ASR = 1,
		LSL = 2,
		LSR = 3,
		ROR = 4,
		RRX = 5,
		ASR_REG = 6,
		LSL_REG = 7,
		LSR_REG = 8,
		ROR_REG = 9,
		RRX_REG = 10
	}

	[CCode (cname="arm64_cc", cprefix="ARM64_CC_", cheader_filename="arm64.h")]
	public enum Arm64CC {
		/*
		   Place cursor in the next line and type: yy@"
		   :r! node cs-dump-enums.js arm64 arm64_cc
		 */
		INVALID = 0,
		EQ = 1,
		NE = 2,
		HS = 3,
		LO = 4,
		MI = 5,
		PL = 6,
		VS = 7,
		VC = 8,
		HI = 9,
		LS = 10,
		GE = 11,
		LT = 12,
		GT = 13,
		LE = 14,
		AL = 15,
		NV = 16,
	}

	[CCode (cname="")]
	public struct Arm64Shift {
		ArmShifter type;
		uint value;
	}

	[CCode (cname="cs_arm64_op", cheader_filename="arm64.h")]
	public struct Arm64Op {
		ArmShift shift;
		Arm64Extender ext;
		ArmOpType type;
		// union
		uint reg;
		int32 imm;
		double fp;
		ArmOpMem mem;
	}

	[CCode (cname="arm64_op_type", cprefix="ARM64_OP_", cheader_filename="arm64.h")]
	public enum Arm64OpType {
		/*
		   Place cursor in the next line and type: yy@"
		   :r! node cs-dump-enums.js arm64 arm64_op_type
		 */
		INVALID = 0,
		REG = 1,
		CIMM = 2,
		IMM = 3,
		FP = 4,
		MEM = 5,
	}

	[CCode (cname="arm64_op_mem", cheader_filename="arm64.h")]
	public struct Arm64OpMem {
		uint base;
		uint index;
		int32 disp;
	}

	[CCode (cname="arm64_insn", cprefix="ARM64_INS_", cheader_filename="arm64.h")]
	public enum Arm64Insn {
		/*
		   Place cursor in the next line and type: yy@"
		   :r! node cs-dump-enums.js arm64 arm64_insn
		 */
		INVALID = 0,
		ABS = 1,
		ADC = 2,
		ADDHN2 = 3,
		ADDHN = 4,
		ADDP = 5,
		ADDV = 6,
		ADD = 7,
		CMN = 8,
		ADRP = 9,
		ADR = 10,
		AESD = 11,
		AESE = 12,
		AESIMC = 13,
		AESMC = 14,
		AND = 15,
		ASR = 16,
		AT = 17,
		BFI = 18,
		BFM = 19,
		BFXIL = 20,
		BIC = 21,
		BIF = 22,
		BIT = 23,
		BLR = 24,
		BL = 25,
		BRK = 26,
		BR = 27,
		BSL = 28,
		B = 29,
		CBNZ = 30,
		CBZ = 31,
		CCMN = 32,
		CCMP = 33,
		CLREX = 34,
		CLS = 35,
		CLZ = 36,
		CMEQ = 37,
		CMGE = 38,
		CMGT = 39,
		CMHI = 40,
		CMHS = 41,
		CMLE = 42,
		CMLT = 43,
		CMP = 44,
		CMTST = 45,
		CNT = 46,
		CRC32B = 47,
		CRC32CB = 48,
		CRC32CH = 49,
		CRC32CW = 50,
		CRC32CX = 51,
		CRC32H = 52,
		CRC32W = 53,
		CRC32X = 54,
		CSEL = 55,
		CSINC = 56,
		CSINV = 57,
		CSNEG = 58,
		DCPS1 = 59,
		DCPS2 = 60,
		DCPS3 = 61,
		DC = 62,
		DMB = 63,
		DRPS = 64,
		DSB = 65,
		DUP = 66,
		EON = 67,
		EOR = 68,
		ERET = 69,
		EXTR = 70,
		EXT = 71,
		FABD = 72,
		FABS = 73,
		FACGE = 74,
		FACGT = 75,
		FADDP = 76,
		FADD = 77,
		FCCMPE = 78,
		FCCMP = 79,
		FCMEQ = 80,
		FCMGE = 81,
		FCMGT = 82,
		FCMLE = 83,
		FCMLT = 84,
		FCMP = 85,
		FCMPE = 86,
		FCSEL = 87,
		FCVTAS = 88,
		FCVTAU = 89,
		FCVTL = 90,
		FCVTL2 = 91,
		FCVTMS = 92,
		FCVTMU = 93,
		FCVTN = 94,
		FCVTN2 = 95,
		FCVTNS = 96,
		FCVTNU = 97,
		FCVTPS = 98,
		FCVTPU = 99,
		FCVTXN = 100,
		FCVTXN2 = 101,
		FCVTZS = 102,
		FCVTZU = 103,
		FCVT = 104,
		FDIV = 105,
		FMADD = 106,
		FMAXNMP = 107,
		FMAXNMV = 108,
		FMAXNM = 109,
		FMAXP = 110,
		FMAXV = 111,
		FMAX = 112,
		FMINNMP = 113,
		FMINNMV = 114,
		FMINNM = 115,
		FMINP = 116,
		FMINV = 117,
		FMIN = 118,
		FMLA = 119,
		FMLS = 120,
		FMOV = 121,
		FMSUB = 122,
		FMULX = 123,
		FMUL = 124,
		FNEG = 125,
		FNMADD = 126,
		FNMSUB = 127,
		FNMUL = 128,
		FRECPE = 129,
		FRECPS = 130,
		FRECPX = 131,
		FRINTA = 132,
		FRINTI = 133,
		FRINTM = 134,
		FRINTN = 135,
		FRINTP = 136,
		FRINTX = 137,
		FRINTZ = 138,
		FRSQRTE = 139,
		FRSQRTS = 140,
		FSQRT = 141,
		FSUB = 142,
		HINT = 143,
		HLT = 144,
		HVC = 145,
		IC = 146,
		INS = 147,
		ISB = 148,
		LD1 = 149,
		LD1R = 150,
		LD2 = 151,
		LD2R = 152,
		LD3 = 153,
		LD3R = 154,
		LD4 = 155,
		LD4R = 156,
		LDARB = 157,
		LDAR = 158,
		LDARH = 159,
		LDAXP = 160,
		LDAXRB = 161,
		LDAXR = 162,
		LDAXRH = 163,
		LDPSW = 164,
		LDRSB = 165,
		LDURSB = 166,
		LDRSH = 167,
		LDURSH = 168,
		LDRSW = 169,
		LDR = 170,
		LDTRSB = 171,
		LDTRSH = 172,
		LDTRSW = 173,
		LDURSW = 174,
		LDXP = 175,
		LDXRB = 176,
		LDXR = 177,
		LDXRH = 178,
		LDRH = 179,
		LDURH = 180,
		STRH = 181,
		STURH = 182,
		LDTRH = 183,
		STTRH = 184,
		LDUR = 185,
		STR = 186,
		STUR = 187,
		LDTR = 188,
		STTR = 189,
		LDRB = 190,
		LDURB = 191,
		STRB = 192,
		STURB = 193,
		LDTRB = 194,
		STTRB = 195,
		LDP = 196,
		LDNP = 197,
		STNP = 198,
		STP = 199,
		LSL = 200,
		LSR = 201,
		MADD = 202,
		MLA = 203,
		MLS = 204,
		MOVI = 205,
		MOVK = 206,
		MOVN = 207,
		MOVZ = 208,
		MRS = 209,
		MSR = 210,
		MSUB = 211,
		MUL = 212,
		MVNI = 213,
		MVN = 214,
		NEG = 215,
		NOT = 216,
		ORN = 217,
		ORR = 218,
		PMULL2 = 219,
		PMULL = 220,
		PMUL = 221,
		PRFM = 222,
		PRFUM = 223,
		SQRSHRUN2 = 224,
		SQRSHRUN = 225,
		SQSHRUN2 = 226,
		SQSHRUN = 227,
		RADDHN2 = 228,
		RADDHN = 229,
		RBIT = 230,
		RET = 231,
		REV16 = 232,
		REV32 = 233,
		REV64 = 234,
		REV = 235,
		ROR = 236,
		RSHRN2 = 237,
		RSHRN = 238,
		RSUBHN2 = 239,
		RSUBHN = 240,
		SABAL2 = 241,
		SABAL = 242,
		SABA = 243,
		SABDL2 = 244,
		SABDL = 245,
		SABD = 246,
		SADALP = 247,
		SADDL2 = 248,
		SADDLP = 249,
		SADDLV = 250,
		SADDL = 251,
		SADDW2 = 252,
		SADDW = 253,
		SBC = 254,
		SBFIZ = 255,
		SBFM = 256,
		SBFX = 257,
		SCVTF = 258,
		SDIV = 259,
		SHA1C = 260,
		SHA1H = 261,
		SHA1M = 262,
		SHA1P = 263,
		SHA1SU0 = 264,
		SHA1SU1 = 265,
		SHA256H = 266,
		SHA256H2 = 267,
		SHA256SU0 = 268,
		SHA256SU1 = 269,
		SHADD = 270,
		SHLL2 = 271,
		SHLL = 272,
		SHL = 273,
		SHRN2 = 274,
		SHRN = 275,
		SHSUB = 276,
		SLI = 277,
		SMADDL = 278,
		SMAXP = 279,
		SMAXV = 280,
		SMAX = 281,
		SMC = 282,
		SMINP = 283,
		SMINV = 284,
		SMIN = 285,
		SMLAL2 = 286,
		SMLAL = 287,
		SMLSL2 = 288,
		SMLSL = 289,
		SMOV = 290,
		SMSUBL = 291,
		SMULH = 292,
		SMULL2 = 293,
		SMULL = 294,
		SQABS = 295,
		SQADD = 296,
		SQDMLAL2 = 297,
		SQDMLAL = 298,
		SQDMLSL2 = 299,
		SQDMLSL = 300,
		SQDMULH = 301,
		SQDMULL2 = 302,
		SQDMULL = 303,
		SQNEG = 304,
		SQRDMULH = 305,
		SQRSHL = 306,
		SQRSHRN = 307,
		SQRSHRN2 = 308,
		SQSHLU = 309,
		SQSHL = 310,
		SQSHRN = 311,
		SQSHRN2 = 312,
		SQSUB = 313,
		SQXTN = 314,
		SQXTN2 = 315,
		SQXTUN = 316,
		SQXTUN2 = 317,
		SRHADD = 318,
		SRI = 319,
		SRSHL = 320,
		SRSHR = 321,
		SRSRA = 322,
		SSHLL2 = 323,
		SSHLL = 324,
		SSHL = 325,
		SSHR = 326,
		SSRA = 327,
		SSUBL2 = 328,
		SSUBL = 329,
		SSUBW2 = 330,
		SSUBW = 331,
		ST1 = 332,
		ST2 = 333,
		ST3 = 334,
		ST4 = 335,
		STLRB = 336,
		STLR = 337,
		STLRH = 338,
		STLXP = 339,
		STLXRB = 340,
		STLXR = 341,
		STLXRH = 342,
		STXP = 343,
		STXRB = 344,
		STXR = 345,
		STXRH = 346,
		SUBHN2 = 347,
		SUBHN = 348,
		SUB = 349,
		SUQADD = 350,
		SVC = 351,
		SXTB = 352,
		SXTH = 353,
		SXTW = 354,
		SYSL = 355,
		SYS = 356,
		TBL = 357,
		TBNZ = 358,
		TBX = 359,
		TBZ = 360,
		TLBI = 361,
		TRN1 = 362,
		TRN2 = 363,
		TST = 364,
		UABAL2 = 365,
		UABAL = 366,
		UABA = 367,
		UABDL2 = 368,
		UABDL = 369,
		UABD = 370,
		UADALP = 371,
		UADDL2 = 372,
		UADDLP = 373,
		UADDLV = 374,
		UADDL = 375,
		UADDW2 = 376,
		UADDW = 377,
		UBFIZ = 378,
		UBFM = 379,
		UBFX = 380,
		UCVTF = 381,
		UDIV = 382,
		UHADD = 383,
		UHSUB = 384,
		UMADDL = 385,
		UMAXP = 386,
		UMAXV = 387,
		UMAX = 388,
		UMINP = 389,
		UMINV = 390,
		UMIN = 391,
		UMLAL2 = 392,
		UMLAL = 393,
		UMLSL2 = 394,
		UMLSL = 395,
		UMOV = 396,
		UMSUBL = 397,
		UMULH = 398,
		UMULL2 = 399,
		UMULL = 400,
		UQADD = 401,
		UQRSHL = 402,
		UQRSHRN = 403,
		UQRSHRN2 = 404,
		UQSHL = 405,
		UQSHRN = 406,
		UQSHRN2 = 407,
		UQSUB = 408,
		UQXTN = 409,
		UQXTN2 = 410,
		URECPE = 411,
		URHADD = 412,
		URSHL = 413,
		URSHR = 414,
		URSQRTE = 415,
		URSRA = 416,
		USHLL2 = 417,
		USHLL = 418,
		USHL = 419,
		USHR = 420,
		USQADD = 421,
		USRA = 422,
		USUBL2 = 423,
		USUBL = 424,
		USUBW2 = 425,
		USUBW = 426,
		UXTB = 427,
		UXTH = 428,
		UZP1 = 429,
		UZP2 = 430,
		XTN = 431,
		XTN2 = 432,
		ZIP1 = 433,
		ZIP2 = 434,
		MNEG = 435,
		UMNEGL = 436,
		SMNEGL = 437,
		MOV = 438,
		NOP = 439,
		YIELD = 440,
		WFE = 441,
		WFI = 442,
		SEV = 443,
		SEVL = 444,
		NGC = 445,
		MAX = 446,
	}

	[CCode (cname="arm64_reg", cprefix="ARM64_REG_", cheader_filename="arm64.h")]
	public enum Arm64Reg {
		/*
		   Place cursor in the next line and type: yy@"
		   :r! node cs-dump-enums.js arm64 arm64_reg
		 */
		INVALID = 0,
		NZCV = 1,
		WSP = 2,
		SP = 3,
		B0 = 4,
		B1 = 5,
		B2 = 6,
		B3 = 7,
		B4 = 8,
		B5 = 9,
		B6 = 10,
		B7 = 11,
		B8 = 12,
		B9 = 13,
		B10 = 14,
		B11 = 15,
		B12 = 16,
		B13 = 17,
		B14 = 18,
		B15 = 19,
		B16 = 20,
		B17 = 21,
		B18 = 22,
		B19 = 23,
		B20 = 24,
		B21 = 25,
		B22 = 26,
		B23 = 27,
		B24 = 28,
		B25 = 29,
		B26 = 30,
		B27 = 31,
		B28 = 32,
		B29 = 33,
		B30 = 34,
		B31 = 35,
		D0 = 36,
		D1 = 37,
		D2 = 38,
		D3 = 39,
		D4 = 40,
		D5 = 41,
		D6 = 42,
		D7 = 43,
		D8 = 44,
		D9 = 45,
		D10 = 46,
		D11 = 47,
		D12 = 48,
		D13 = 49,
		D14 = 50,
		D15 = 51,
		D16 = 52,
		D17 = 53,
		D18 = 54,
		D19 = 55,
		D20 = 56,
		D21 = 57,
		D22 = 58,
		D23 = 59,
		D24 = 60,
		D25 = 61,
		D26 = 62,
		D27 = 63,
		D28 = 64,
		D29 = 65,
		D30 = 66,
		D31 = 67,
		H0 = 68,
		H1 = 69,
		H2 = 70,
		H3 = 71,
		H4 = 72,
		H5 = 73,
		H6 = 74,
		H7 = 75,
		H8 = 76,
		H9 = 77,
		H10 = 78,
		H11 = 79,
		H12 = 80,
		H13 = 81,
		H14 = 82,
		H15 = 83,
		H16 = 84,
		H17 = 85,
		H18 = 86,
		H19 = 87,
		H20 = 88,
		H21 = 89,
		H22 = 90,
		H23 = 91,
		H24 = 92,
		H25 = 93,
		H26 = 94,
		H27 = 95,
		H28 = 96,
		H29 = 97,
		H30 = 98,
		H31 = 99,
		Q0 = 100,
		Q1 = 101,
		Q2 = 102,
		Q3 = 103,
		Q4 = 104,
		Q5 = 105,
		Q6 = 106,
		Q7 = 107,
		Q8 = 108,
		Q9 = 109,
		Q10 = 110,
		Q11 = 111,
		Q12 = 112,
		Q13 = 113,
		Q14 = 114,
		Q15 = 115,
		Q16 = 116,
		Q17 = 117,
		Q18 = 118,
		Q19 = 119,
		Q20 = 120,
		Q21 = 121,
		Q22 = 122,
		Q23 = 123,
		Q24 = 124,
		Q25 = 125,
		Q26 = 126,
		Q27 = 127,
		Q28 = 128,
		Q29 = 129,
		Q30 = 130,
		Q31 = 131,
		S0 = 132,
		S1 = 133,
		S2 = 134,
		S3 = 135,
		S4 = 136,
		S5 = 137,
		S6 = 138,
		S7 = 139,
		S8 = 140,
		S9 = 141,
		S10 = 142,
		S11 = 143,
		S12 = 144,
		S13 = 145,
		S14 = 146,
		S15 = 147,
		S16 = 148,
		S17 = 149,
		S18 = 150,
		S19 = 151,
		S20 = 152,
		S21 = 153,
		S22 = 154,
		S23 = 155,
		S24 = 156,
		S25 = 157,
		S26 = 158,
		S27 = 159,
		S28 = 160,
		S29 = 161,
		S30 = 162,
		S31 = 163,
		W0 = 164,
		W1 = 165,
		W2 = 166,
		W3 = 167,
		W4 = 168,
		W5 = 169,
		W6 = 170,
		W7 = 171,
		W8 = 172,
		W9 = 173,
		W10 = 174,
		W11 = 175,
		W12 = 176,
		W13 = 177,
		W14 = 178,
		W15 = 179,
		W16 = 180,
		W17 = 181,
		W18 = 182,
		W19 = 183,
		W20 = 184,
		W21 = 185,
		W22 = 186,
		W23 = 187,
		W24 = 188,
		W25 = 189,
		W26 = 190,
		W27 = 191,
		W28 = 192,
		W29 = 193,
		W30 = 194,
		X0 = 195,
		X1 = 196,
		X2 = 197,
		X3 = 198,
		X4 = 199,
		X5 = 200,
		X6 = 201,
		X7 = 202,
		X8 = 203,
		X9 = 204,
		X10 = 205,
		X11 = 206,
		X12 = 207,
		X13 = 208,
		X14 = 209,
		X15 = 210,
		X16 = 211,
		X17 = 212,
		X18 = 213,
		X19 = 214,
		X20 = 215,
		X21 = 216,
		X22 = 217,
		X23 = 218,
		X24 = 219,
		X25 = 220,
		X26 = 221,
		X27 = 222,
		X28 = 223,
		X29 = 224,
		X30 = 225,
		MAX = 226,

		IP1 = X16,
		IP0 = X17,
		FP = X29,
		LR = X30,
		XZR = SP,
		WZR = WSP,
	}

	[CCode (cname="arm64_insn_group", cprefix="ARM64_GRP_", cheader_filename="arm64.h")]
	public enum Arm64InsnGroup {
		/*
		   Place cursor in the next line and type: yy@"
		   :r! node cs-dump-enums.js arm64 arm64_insn_group
		 */
		INVALID = 0,
		CRYPTO = 1,
		FPARMV8 = 2,
		NEON = 3,
		JUMP = 4,
		MAX = 5,
	}
}
